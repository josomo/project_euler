#Using names.txt (right click and 'Save Link/Target As...'), a 46K text file containing over five-thousand first 
#names, begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, 
#multiply this value by its alphabetical position in the list to obtain a name score.

#For example, when the list is sorted into alphabetical order, COLIN, which is worth 3 + 15 + 12 + 9 + 14 = 53, 
#is the 938th name in the list. So, COLIN would obtain a score of 938 Ã— 53 = 49714.

#What is the total of all the name scores in the file?


require 'csv'
a = CSV.read("names.txt")
b = a[0].sort
score = 0

def alpha_score(x)
  x.downcase
  c = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
   "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
  return c.index(x) + 1
end

b.each do |x|
  sum = 0
  x.chars.each { |y| sum = sum + alpha_score(y) }
  score = (sum * (b.index(x) +1) + score)
end

puts score
